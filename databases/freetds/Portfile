# $Id: Portfile 2 2011-04-11 10:03:00Z ken@metaskills.net $

PortSystem          1.0

name                freetds
version             0.92.dev.20110410
categories          databases
platforms           darwin
maintainers         nomaintainer

description         A set of libraries for Unix and Linux that allows your programs to natively \
                    talk to Microsoft SQL Server and Sybase databases

long_description    FreeTDS is an open source implementation of the TDS (Tabular DataStream) \
                    protocol used by these databases for their own clients. It supports many \
                    different flavors of the protocol and supports several APIs to access it. \
                    Additionally FreeTDS works with other software such as Perl and PHP, \
                    providing access from those languages as well. There is also a native (type 4) \
                    JDBC driver available for platform-independent Java clients (including Java \
                    Server Pages applications), with support for most of the JDBC 1 API and \
                    portions of the JDBC 2 API.

homepage            http://www.freetds.org/
master_sites        http://www.ibiblio.org/pub/Linux/ALPHA/freetds/current/
distfiles           freetds-current.tgz

checksums           md5     b9f4b0f794f1d85fc5c8e9e0b1fc9ef7

depends_build       port:libtool

depends_lib         port:libiconv \
                    port:ncurses \
                    port:readline

# patchfiles          patch-xyz.diff

configure.args      --mandir=${prefix}/share/man \
                    --includedir=${prefix}/include/${name} \
                    --sysconfdir=${prefix}/etc/${name} \
                    --with-libiconv-prefix=${prefix} \
                    --with-tdsver=7.1

pre-fetch {
    file delete ${distpath}/freetds-current.tgz
}

post-patch {
    reinplace "s|../replacements/libreplacements.la||g" \
        ${worksrcpath}/src/server/Makefile.in \
        ${worksrcpath}/src/ctlib/Makefile.in \
        ${worksrcpath}/src/odbc/Makefile.in \
        ${worksrcpath}/src/dblib/Makefile.in \
        ${worksrcpath}/src/apps/Makefile.in
    
    reinplace "s|../../replacements/libreplacements.la||g" \
        ${worksrcpath}/src/apps/fisql/Makefile.in \
        ${worksrcpath}/src/dblib/unittests/Makefile.in \
        ${worksrcpath}/src/tds/unittests/Makefile.in
}

use_parallel_build  yes

pre-build {
    ln -sf ${prefix}/bin/glibtool ${worksrcpath}/libtool
}

post-destroot {
    # rename the freetds conf files so we don't clobber any existing ones
    foreach file [list "freetds.conf" "locales.conf" "pool.conf"] {
        file rename ${destroot}${prefix}/etc/freetds/${file} ${destroot}${prefix}/etc/freetds/${file}.sample
    }
    
    file rename ${destroot}${prefix}/share/doc/${name}-${version} \
        ${destroot}${prefix}/share/doc/${name}
}

post-activate {
    # copy over freetds sample files if none exists
    ui_msg "\n****************************************************************"
    foreach file [list "freetds.conf" "locales.conf" "pool.conf"] {
        if {![file exists ${prefix}/etc/freetds/${file}]} {
            ui_msg "Configuration file ${file} does not exist and has been created using"
            ui_msg "    ${prefix}/etc/freetds/${file}.sample"
            file copy ${prefix}/etc/freetds/${file}.sample ${prefix}/etc/freetds/${file}
        } else {
            ui_msg "Configuration file ${file} exists and has has been retained."
            ui_msg "(The distribution's version has been installed to ${prefix}/etc/freetds/${file}.sample)"
        }
    }
    ui_msg "****************************************************************"
}

variant mssql description {Use MS style dblib} {
    configure.args-append --enable-msdblib --with-tdsver=8.0
}

variant nodebug description {Disable debug} {
    configure.args-append --disable-debug
}

variant odbc description {Build odbc driver against unixODBC} {
    depends_lib-append port:unixODBC
    configure.args-append --with-unixodbc=${prefix}
}

variant odbcwide description {Enable odbc wide experimentaal} {
  depends_lib-append port:unixODBC
  configure.args-append --with-unixodbc=${prefix} \
                        --enable-odbc-wide
}

variant noodbc description {No odbc driver manager} {
    configure.args-append --disable-odbc
}

variant openssl description {Use openssl} {
    depends_lib-append port:openssl
    configure.args-append --with-openssl=${prefix}
}


